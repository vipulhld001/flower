[2023-09-27 19:18:58,005][flwr][INFO] - Starting Flower simulation, config: ServerConfig(num_rounds=2, round_timeout=None)
[2023-09-27 19:19:00,829][flwr][INFO] - Flower VCE: Ray initialized with resources: {'CPU': 8.0, 'memory': 1554960384.0, 'object_store_memory': 777480192.0, 'node:__internal_head__': 1.0, 'node:192.168.43.77': 1.0}
[2023-09-27 19:19:00,829][flwr][INFO] - Flower VCE: Resources for each Virtual Client: {'num_cpus': 2, 'num_gpus': 0.0}
[2023-09-27 19:19:00,838][flwr][INFO] - Flower VCE: Creating VirtualClientEngineActorPool with 4 actors
[2023-09-27 19:19:00,838][flwr][INFO] - Initializing global parameters
[2023-09-27 19:19:00,838][flwr][INFO] - Requesting initial parameters from one random client
[2023-09-27 19:19:03,849][flwr][INFO] - Received initial parameters from one random client
[2023-09-27 19:19:03,849][flwr][INFO] - Evaluating initial parameters
[2023-09-27 19:19:05,659][flwr][INFO] - initial parameters (loss, other metrics): 182.3941559791565, {'accuracy': 0.0434}
[2023-09-27 19:19:05,659][flwr][INFO] - FL starting
[2023-09-27 19:19:05,659][flwr][DEBUG] - fit_round 1: strategy sampled 5 clients (out of 10)
[2023-09-27 19:19:10,041][flwr][ERROR] - Traceback (most recent call last):
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/flwr/simulation/ray_transport/ray_client_proxy.py", line 140, in _submit_job
    res = self.actor_pool.get_client_result(self.cid, timeout)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 402, in get_client_result
    return self._fetch_future_result(cid)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 288, in _fetch_future_result
    res_cid, res = ray.get(future)  # type: (str, ClientRes)
                   ^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/ray/_private/auto_init_hook.py", line 24, in auto_init_wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/ray/_private/worker.py", line 2526, in get
    raise value
ray.exceptions.OutOfMemoryError: Task was killed due to the node running low on memory.
Memory on the node (IP: 192.168.43.77, ID: 34ed7d8b40e69ef947ee7cce7fb5303e7d66bda541727a84cf77beb5) where the task (actor ID: 2dc1cb269822f44fecff7a1d01000000, name=DefaultActor.__init__, pid=1194930, memory used=0.01GB) was running was 7.28GB / 7.66GB (0.950328), which exceeds the memory usage threshold of 0.95. Ray killed this worker (ID: 2f721e2561b116e16300ed4fe10e0c81186eea66d9a0daa14dd8f85d) because it was the most recently scheduled task; to see more information about memory usage on this node, use `ray logs raylet.out -ip 192.168.43.77`. To see the logs of the worker, use `ray logs worker-2f721e2561b116e16300ed4fe10e0c81186eea66d9a0daa14dd8f85d*out -ip 192.168.43.77. Top 10 memory users:
PID	MEM(GB)	COMMAND
1097	0.50	/usr/lib/firefox/firefox
1261	0.42	/usr/lib/firefox/firefox -contentproc -childID 2 -isForBrowser -prefsLen 26797 -prefMapSize 234730 -...
1194539	0.35	python main.py
1265	0.28	/usr/lib/firefox/firefox -contentproc -childID 3 -isForBrowser -prefsLen 26797 -prefMapSize 234730 -...
732	0.26	/usr/bin/plasmashell --no-respawn
496501	0.21	/opt/visual-studio-code/code --ms-enable-electron-run-as-node /home/viplu/.vscode/extensions/ms-pyth...
1119947	0.21	/usr/lib/firefox/firefox -contentproc -childID 1208 -isForBrowser -prefsLen 32172 -prefMapSize 23473...
1130648	0.20	/usr/lib/firefox/firefox -contentproc -childID 1220 -isForBrowser -prefsLen 32172 -prefMapSize 23473...
496160	0.14	/opt/visual-studio-code/code --type=renderer --crashpad-handler-pid=496118 --enable-crash-reporter=4...
1142561	0.11	/usr/lib/firefox/firefox -contentproc -childID 1225 -isForBrowser -prefsLen 32171 -prefMapSize 23473...
Refer to the documentation on how to address the out of memory issue: https://docs.ray.io/en/latest/ray-core/scheduling/ray-oom-prevention.html. Consider provisioning more memory on this node or reducing task parallelism by requesting more CPUs per task. Set max_restarts and max_task_retries to enable retry when the task crashes due to OOM. To adjust the kill threshold, set the environment variable `RAY_memory_usage_threshold` when starting Ray. To disable worker killing, set the environment variable `RAY_memory_monitor_refresh_ms` to zero.

[2023-09-27 19:19:10,042][flwr][ERROR] - Task was killed due to the node running low on memory.
Memory on the node (IP: 192.168.43.77, ID: 34ed7d8b40e69ef947ee7cce7fb5303e7d66bda541727a84cf77beb5) where the task (actor ID: 2dc1cb269822f44fecff7a1d01000000, name=DefaultActor.__init__, pid=1194930, memory used=0.01GB) was running was 7.28GB / 7.66GB (0.950328), which exceeds the memory usage threshold of 0.95. Ray killed this worker (ID: 2f721e2561b116e16300ed4fe10e0c81186eea66d9a0daa14dd8f85d) because it was the most recently scheduled task; to see more information about memory usage on this node, use `ray logs raylet.out -ip 192.168.43.77`. To see the logs of the worker, use `ray logs worker-2f721e2561b116e16300ed4fe10e0c81186eea66d9a0daa14dd8f85d*out -ip 192.168.43.77. Top 10 memory users:
PID	MEM(GB)	COMMAND
1097	0.50	/usr/lib/firefox/firefox
1261	0.42	/usr/lib/firefox/firefox -contentproc -childID 2 -isForBrowser -prefsLen 26797 -prefMapSize 234730 -...
1194539	0.35	python main.py
1265	0.28	/usr/lib/firefox/firefox -contentproc -childID 3 -isForBrowser -prefsLen 26797 -prefMapSize 234730 -...
732	0.26	/usr/bin/plasmashell --no-respawn
496501	0.21	/opt/visual-studio-code/code --ms-enable-electron-run-as-node /home/viplu/.vscode/extensions/ms-pyth...
1119947	0.21	/usr/lib/firefox/firefox -contentproc -childID 1208 -isForBrowser -prefsLen 32172 -prefMapSize 23473...
1130648	0.20	/usr/lib/firefox/firefox -contentproc -childID 1220 -isForBrowser -prefsLen 32172 -prefMapSize 23473...
496160	0.14	/opt/visual-studio-code/code --type=renderer --crashpad-handler-pid=496118 --enable-crash-reporter=4...
1142561	0.11	/usr/lib/firefox/firefox -contentproc -childID 1225 -isForBrowser -prefsLen 32171 -prefMapSize 23473...
Refer to the documentation on how to address the out of memory issue: https://docs.ray.io/en/latest/ray-core/scheduling/ray-oom-prevention.html. Consider provisioning more memory on this node or reducing task parallelism by requesting more CPUs per task. Set max_restarts and max_task_retries to enable retry when the task crashes due to OOM. To adjust the kill threshold, set the environment variable `RAY_memory_usage_threshold` when starting Ray. To disable worker killing, set the environment variable `RAY_memory_monitor_refresh_ms` to zero.
[2023-09-27 19:19:10,903][flwr][DEBUG] - fit_round 1 received 4 results and 1 failures
[2023-09-27 19:19:10,913][flwr][WARNING] - No fit_metrics_aggregation_fn provided
[2023-09-27 19:19:12,676][flwr][INFO] - fit progress: (1, 15.90349236689508, {'accuracy': 0.9391}, 7.016998289007461)
[2023-09-27 19:19:12,676][flwr][INFO] - evaluate_round 1: no clients selected, cancel
[2023-09-27 19:19:12,677][flwr][DEBUG] - fit_round 2: strategy sampled 5 clients (out of 10)
[2023-09-27 19:19:12,962][flwr][ERROR] - Traceback (most recent call last):
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/flwr/simulation/ray_transport/ray_client_proxy.py", line 140, in _submit_job
    res = self.actor_pool.get_client_result(self.cid, timeout)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 402, in get_client_result
    return self._fetch_future_result(cid)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 288, in _fetch_future_result
    res_cid, res = ray.get(future)  # type: (str, ClientRes)
                   ^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/ray/_private/auto_init_hook.py", line 24, in auto_init_wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/ray/_private/worker.py", line 2526, in get
    raise value
ray.exceptions.OutOfMemoryError: Task was killed due to the node running low on memory.
Memory on the node (IP: 192.168.43.77, ID: 34ed7d8b40e69ef947ee7cce7fb5303e7d66bda541727a84cf77beb5) where the task (actor ID: 2dc1cb269822f44fecff7a1d01000000, name=DefaultActor.__init__, pid=1194930, memory used=0.01GB) was running was 7.28GB / 7.66GB (0.950328), which exceeds the memory usage threshold of 0.95. Ray killed this worker (ID: 2f721e2561b116e16300ed4fe10e0c81186eea66d9a0daa14dd8f85d) because it was the most recently scheduled task; to see more information about memory usage on this node, use `ray logs raylet.out -ip 192.168.43.77`. To see the logs of the worker, use `ray logs worker-2f721e2561b116e16300ed4fe10e0c81186eea66d9a0daa14dd8f85d*out -ip 192.168.43.77. Top 10 memory users:
PID	MEM(GB)	COMMAND
1097	0.50	/usr/lib/firefox/firefox
1261	0.42	/usr/lib/firefox/firefox -contentproc -childID 2 -isForBrowser -prefsLen 26797 -prefMapSize 234730 -...
1194539	0.35	python main.py
1265	0.28	/usr/lib/firefox/firefox -contentproc -childID 3 -isForBrowser -prefsLen 26797 -prefMapSize 234730 -...
732	0.26	/usr/bin/plasmashell --no-respawn
496501	0.21	/opt/visual-studio-code/code --ms-enable-electron-run-as-node /home/viplu/.vscode/extensions/ms-pyth...
1119947	0.21	/usr/lib/firefox/firefox -contentproc -childID 1208 -isForBrowser -prefsLen 32172 -prefMapSize 23473...
1130648	0.20	/usr/lib/firefox/firefox -contentproc -childID 1220 -isForBrowser -prefsLen 32172 -prefMapSize 23473...
496160	0.14	/opt/visual-studio-code/code --type=renderer --crashpad-handler-pid=496118 --enable-crash-reporter=4...
1142561	0.11	/usr/lib/firefox/firefox -contentproc -childID 1225 -isForBrowser -prefsLen 32171 -prefMapSize 23473...
Refer to the documentation on how to address the out of memory issue: https://docs.ray.io/en/latest/ray-core/scheduling/ray-oom-prevention.html. Consider provisioning more memory on this node or reducing task parallelism by requesting more CPUs per task. Set max_restarts and max_task_retries to enable retry when the task crashes due to OOM. To adjust the kill threshold, set the environment variable `RAY_memory_usage_threshold` when starting Ray. To disable worker killing, set the environment variable `RAY_memory_monitor_refresh_ms` to zero.

[2023-09-27 19:19:12,963][flwr][ERROR] - Task was killed due to the node running low on memory.
Memory on the node (IP: 192.168.43.77, ID: 34ed7d8b40e69ef947ee7cce7fb5303e7d66bda541727a84cf77beb5) where the task (actor ID: 2dc1cb269822f44fecff7a1d01000000, name=DefaultActor.__init__, pid=1194930, memory used=0.01GB) was running was 7.28GB / 7.66GB (0.950328), which exceeds the memory usage threshold of 0.95. Ray killed this worker (ID: 2f721e2561b116e16300ed4fe10e0c81186eea66d9a0daa14dd8f85d) because it was the most recently scheduled task; to see more information about memory usage on this node, use `ray logs raylet.out -ip 192.168.43.77`. To see the logs of the worker, use `ray logs worker-2f721e2561b116e16300ed4fe10e0c81186eea66d9a0daa14dd8f85d*out -ip 192.168.43.77. Top 10 memory users:
PID	MEM(GB)	COMMAND
1097	0.50	/usr/lib/firefox/firefox
1261	0.42	/usr/lib/firefox/firefox -contentproc -childID 2 -isForBrowser -prefsLen 26797 -prefMapSize 234730 -...
1194539	0.35	python main.py
1265	0.28	/usr/lib/firefox/firefox -contentproc -childID 3 -isForBrowser -prefsLen 26797 -prefMapSize 234730 -...
732	0.26	/usr/bin/plasmashell --no-respawn
496501	0.21	/opt/visual-studio-code/code --ms-enable-electron-run-as-node /home/viplu/.vscode/extensions/ms-pyth...
1119947	0.21	/usr/lib/firefox/firefox -contentproc -childID 1208 -isForBrowser -prefsLen 32172 -prefMapSize 23473...
1130648	0.20	/usr/lib/firefox/firefox -contentproc -childID 1220 -isForBrowser -prefsLen 32172 -prefMapSize 23473...
496160	0.14	/opt/visual-studio-code/code --type=renderer --crashpad-handler-pid=496118 --enable-crash-reporter=4...
1142561	0.11	/usr/lib/firefox/firefox -contentproc -childID 1225 -isForBrowser -prefsLen 32171 -prefMapSize 23473...
Refer to the documentation on how to address the out of memory issue: https://docs.ray.io/en/latest/ray-core/scheduling/ray-oom-prevention.html. Consider provisioning more memory on this node or reducing task parallelism by requesting more CPUs per task. Set max_restarts and max_task_retries to enable retry when the task crashes due to OOM. To adjust the kill threshold, set the environment variable `RAY_memory_usage_threshold` when starting Ray. To disable worker killing, set the environment variable `RAY_memory_monitor_refresh_ms` to zero.
[2023-09-27 19:19:12,963][flwr][ERROR] - Traceback (most recent call last):
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/flwr/simulation/ray_transport/ray_client_proxy.py", line 140, in _submit_job
    res = self.actor_pool.get_client_result(self.cid, timeout)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 402, in get_client_result
    return self._fetch_future_result(cid)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 288, in _fetch_future_result
    res_cid, res = ray.get(future)  # type: (str, ClientRes)
                   ^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/ray/_private/auto_init_hook.py", line 24, in auto_init_wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/ray/_private/worker.py", line 2526, in get
    raise value
ray.exceptions.OutOfMemoryError: Task was killed due to the node running low on memory.
Memory on the node (IP: 192.168.43.77, ID: 34ed7d8b40e69ef947ee7cce7fb5303e7d66bda541727a84cf77beb5) where the task (actor ID: 40a54f5df342f4c9ef7475ff01000000, name=DefaultActor.__init__, pid=1194932, memory used=0.19GB) was running was 7.38GB / 7.66GB (0.963207), which exceeds the memory usage threshold of 0.95. Ray killed this worker (ID: d68a1cf62b53ca86a3d4d7e463d9a1a2e7fe609961e953a680bce2fb) because it was the most recently scheduled task; to see more information about memory usage on this node, use `ray logs raylet.out -ip 192.168.43.77`. To see the logs of the worker, use `ray logs worker-d68a1cf62b53ca86a3d4d7e463d9a1a2e7fe609961e953a680bce2fb*out -ip 192.168.43.77. Top 10 memory users:
PID	MEM(GB)	COMMAND
1097	0.50	/usr/lib/firefox/firefox
1261	0.42	/usr/lib/firefox/firefox -contentproc -childID 2 -isForBrowser -prefsLen 26797 -prefMapSize 234730 -...
1265	0.28	/usr/lib/firefox/firefox -contentproc -childID 3 -isForBrowser -prefsLen 26797 -prefMapSize 234730 -...
1194539	0.26	python main.py
732	0.25	/usr/bin/plasmashell --no-respawn
496501	0.21	/opt/visual-studio-code/code --ms-enable-electron-run-as-node /home/viplu/.vscode/extensions/ms-pyth...
1119947	0.21	/usr/lib/firefox/firefox -contentproc -childID 1208 -isForBrowser -prefsLen 32172 -prefMapSize 23473...
1130648	0.20	/usr/lib/firefox/firefox -contentproc -childID 1220 -isForBrowser -prefsLen 32172 -prefMapSize 23473...
1194932	0.19	ray::DefaultActor
496160	0.14	/opt/visual-studio-code/code --type=renderer --crashpad-handler-pid=496118 --enable-crash-reporter=4...
Refer to the documentation on how to address the out of memory issue: https://docs.ray.io/en/latest/ray-core/scheduling/ray-oom-prevention.html. Consider provisioning more memory on this node or reducing task parallelism by requesting more CPUs per task. Set max_restarts and max_task_retries to enable retry when the task crashes due to OOM. To adjust the kill threshold, set the environment variable `RAY_memory_usage_threshold` when starting Ray. To disable worker killing, set the environment variable `RAY_memory_monitor_refresh_ms` to zero.

[2023-09-27 19:19:12,964][flwr][ERROR] - Traceback (most recent call last):
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/flwr/simulation/ray_transport/ray_client_proxy.py", line 140, in _submit_job
    res = self.actor_pool.get_client_result(self.cid, timeout)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 402, in get_client_result
    return self._fetch_future_result(cid)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/flwr/simulation/ray_transport/ray_actor.py", line 288, in _fetch_future_result
    res_cid, res = ray.get(future)  # type: (str, ClientRes)
                   ^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/ray/_private/auto_init_hook.py", line 24, in auto_init_wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/ray/_private/client_mode_hook.py", line 103, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/viplu/flwrpytorch/lib/python3.11/site-packages/ray/_private/worker.py", line 2526, in get
    raise value
ray.exceptions.OutOfMemoryError: Task was killed due to the node running low on memory.
Memory on the node (IP: 192.168.43.77, ID: 34ed7d8b40e69ef947ee7cce7fb5303e7d66bda541727a84cf77beb5) where the task (actor ID: 2dc1cb269822f44fecff7a1d01000000, name=DefaultActor.__init__, pid=1194930, memory used=0.01GB) was running was 7.28GB / 7.66GB (0.950328), which exceeds the memory usage threshold of 0.95. Ray killed this worker (ID: 2f721e2561b116e16300ed4fe10e0c81186eea66d9a0daa14dd8f85d) because it was the most recently scheduled task; to see more information about memory usage on this node, use `ray logs raylet.out -ip 192.168.43.77`. To see the logs of the worker, use `ray logs worker-2f721e2561b116e16300ed4fe10e0c81186eea66d9a0daa14dd8f85d*out -ip 192.168.43.77. Top 10 memory users:
PID	MEM(GB)	COMMAND
1097	0.50	/usr/lib/firefox/firefox
1261	0.42	/usr/lib/firefox/firefox -contentproc -childID 2 -isForBrowser -prefsLen 26797 -prefMapSize 234730 -...
1194539	0.35	python main.py
1265	0.28	/usr/lib/firefox/firefox -contentproc -childID 3 -isForBrowser -prefsLen 26797 -prefMapSize 234730 -...
732	0.26	/usr/bin/plasmashell --no-respawn
496501	0.21	/opt/visual-studio-code/code --ms-enable-electron-run-as-node /home/viplu/.vscode/extensions/ms-pyth...
1119947	0.21	/usr/lib/firefox/firefox -contentproc -childID 1208 -isForBrowser -prefsLen 32172 -prefMapSize 23473...
1130648	0.20	/usr/lib/firefox/firefox -contentproc -childID 1220 -isForBrowser -prefsLen 32172 -prefMapSize 23473...
496160	0.14	/opt/visual-studio-code/code --type=renderer --crashpad-handler-pid=496118 --enable-crash-reporter=4...
1142561	0.11	/usr/lib/firefox/firefox -contentproc -childID 1225 -isForBrowser -prefsLen 32171 -prefMapSize 23473...
Refer to the documentation on how to address the out of memory issue: https://docs.ray.io/en/latest/ray-core/scheduling/ray-oom-prevention.html. Consider provisioning more memory on this node or reducing task parallelism by requesting more CPUs per task. Set max_restarts and max_task_retries to enable retry when the task crashes due to OOM. To adjust the kill threshold, set the environment variable `RAY_memory_usage_threshold` when starting Ray. To disable worker killing, set the environment variable `RAY_memory_monitor_refresh_ms` to zero.

[2023-09-27 19:19:12,965][flwr][ERROR] - Task was killed due to the node running low on memory.
Memory on the node (IP: 192.168.43.77, ID: 34ed7d8b40e69ef947ee7cce7fb5303e7d66bda541727a84cf77beb5) where the task (actor ID: 40a54f5df342f4c9ef7475ff01000000, name=DefaultActor.__init__, pid=1194932, memory used=0.19GB) was running was 7.38GB / 7.66GB (0.963207), which exceeds the memory usage threshold of 0.95. Ray killed this worker (ID: d68a1cf62b53ca86a3d4d7e463d9a1a2e7fe609961e953a680bce2fb) because it was the most recently scheduled task; to see more information about memory usage on this node, use `ray logs raylet.out -ip 192.168.43.77`. To see the logs of the worker, use `ray logs worker-d68a1cf62b53ca86a3d4d7e463d9a1a2e7fe609961e953a680bce2fb*out -ip 192.168.43.77. Top 10 memory users:
PID	MEM(GB)	COMMAND
1097	0.50	/usr/lib/firefox/firefox
1261	0.42	/usr/lib/firefox/firefox -contentproc -childID 2 -isForBrowser -prefsLen 26797 -prefMapSize 234730 -...
1265	0.28	/usr/lib/firefox/firefox -contentproc -childID 3 -isForBrowser -prefsLen 26797 -prefMapSize 234730 -...
1194539	0.26	python main.py
732	0.25	/usr/bin/plasmashell --no-respawn
496501	0.21	/opt/visual-studio-code/code --ms-enable-electron-run-as-node /home/viplu/.vscode/extensions/ms-pyth...
1119947	0.21	/usr/lib/firefox/firefox -contentproc -childID 1208 -isForBrowser -prefsLen 32172 -prefMapSize 23473...
1130648	0.20	/usr/lib/firefox/firefox -contentproc -childID 1220 -isForBrowser -prefsLen 32172 -prefMapSize 23473...
1194932	0.19	ray::DefaultActor
496160	0.14	/opt/visual-studio-code/code --type=renderer --crashpad-handler-pid=496118 --enable-crash-reporter=4...
Refer to the documentation on how to address the out of memory issue: https://docs.ray.io/en/latest/ray-core/scheduling/ray-oom-prevention.html. Consider provisioning more memory on this node or reducing task parallelism by requesting more CPUs per task. Set max_restarts and max_task_retries to enable retry when the task crashes due to OOM. To adjust the kill threshold, set the environment variable `RAY_memory_usage_threshold` when starting Ray. To disable worker killing, set the environment variable `RAY_memory_monitor_refresh_ms` to zero.
[2023-09-27 19:19:12,966][flwr][ERROR] - Task was killed due to the node running low on memory.
Memory on the node (IP: 192.168.43.77, ID: 34ed7d8b40e69ef947ee7cce7fb5303e7d66bda541727a84cf77beb5) where the task (actor ID: 2dc1cb269822f44fecff7a1d01000000, name=DefaultActor.__init__, pid=1194930, memory used=0.01GB) was running was 7.28GB / 7.66GB (0.950328), which exceeds the memory usage threshold of 0.95. Ray killed this worker (ID: 2f721e2561b116e16300ed4fe10e0c81186eea66d9a0daa14dd8f85d) because it was the most recently scheduled task; to see more information about memory usage on this node, use `ray logs raylet.out -ip 192.168.43.77`. To see the logs of the worker, use `ray logs worker-2f721e2561b116e16300ed4fe10e0c81186eea66d9a0daa14dd8f85d*out -ip 192.168.43.77. Top 10 memory users:
PID	MEM(GB)	COMMAND
1097	0.50	/usr/lib/firefox/firefox
1261	0.42	/usr/lib/firefox/firefox -contentproc -childID 2 -isForBrowser -prefsLen 26797 -prefMapSize 234730 -...
1194539	0.35	python main.py
1265	0.28	/usr/lib/firefox/firefox -contentproc -childID 3 -isForBrowser -prefsLen 26797 -prefMapSize 234730 -...
732	0.26	/usr/bin/plasmashell --no-respawn
496501	0.21	/opt/visual-studio-code/code --ms-enable-electron-run-as-node /home/viplu/.vscode/extensions/ms-pyth...
1119947	0.21	/usr/lib/firefox/firefox -contentproc -childID 1208 -isForBrowser -prefsLen 32172 -prefMapSize 23473...
1130648	0.20	/usr/lib/firefox/firefox -contentproc -childID 1220 -isForBrowser -prefsLen 32172 -prefMapSize 23473...
496160	0.14	/opt/visual-studio-code/code --type=renderer --crashpad-handler-pid=496118 --enable-crash-reporter=4...
1142561	0.11	/usr/lib/firefox/firefox -contentproc -childID 1225 -isForBrowser -prefsLen 32171 -prefMapSize 23473...
Refer to the documentation on how to address the out of memory issue: https://docs.ray.io/en/latest/ray-core/scheduling/ray-oom-prevention.html. Consider provisioning more memory on this node or reducing task parallelism by requesting more CPUs per task. Set max_restarts and max_task_retries to enable retry when the task crashes due to OOM. To adjust the kill threshold, set the environment variable `RAY_memory_usage_threshold` when starting Ray. To disable worker killing, set the environment variable `RAY_memory_monitor_refresh_ms` to zero.
[2023-09-27 19:19:14,191][flwr][DEBUG] - fit_round 2 received 2 results and 3 failures
[2023-09-27 19:19:15,838][flwr][INFO] - fit progress: (2, 13.756981525104493, {'accuracy': 0.9442}, 10.179010323015973)
[2023-09-27 19:19:15,838][flwr][INFO] - evaluate_round 2: no clients selected, cancel
[2023-09-27 19:19:15,838][flwr][INFO] - FL finished in 10.179299448995152
[2023-09-27 19:19:15,839][flwr][INFO] - app_fit: losses_distributed []
[2023-09-27 19:19:15,839][flwr][INFO] - app_fit: metrics_distributed_fit {}
[2023-09-27 19:19:15,839][flwr][INFO] - app_fit: metrics_distributed {}
[2023-09-27 19:19:15,839][flwr][INFO] - app_fit: losses_centralized [(0, 182.3941559791565), (1, 15.90349236689508), (2, 13.756981525104493)]
[2023-09-27 19:19:15,839][flwr][INFO] - app_fit: metrics_centralized {'accuracy': [(0, 0.0434), (1, 0.9391), (2, 0.9442)]}
